name: CI with GCP OIDC Auth

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

# Required for OIDC authentication to GCP
permissions:
  contents: read
  id-token: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      
      - name: Display Node.js and npm versions
        run: |
          node --version
          npm --version
      
      # Authenticate to Google Cloud using Workload Identity Federation (OIDC)
      # This step is optional and will be skipped if secrets are not configured
      # 
      # REQUIRED REPOSITORY SECRETS (add these in GitHub repo settings):
      # - GCP_WORKLOAD_IDENTITY_PROVIDER: Full provider resource name
      #   Format: projects/PROJECT_NUMBER/locations/global/workloadIdentityPools/POOL_ID/providers/PROVIDER_ID
      #   Example: projects/123456789/locations/global/workloadIdentityPools/github-pool/providers/github-oidc-provider
      #
      # - GCP_SERVICE_ACCOUNT: Email of the service account to impersonate
      #   Format: SERVICE_ACCOUNT_NAME@PROJECT_ID.iam.gserviceaccount.com
      #   Example: ci-github-sa@bonnie-lass-florals.iam.gserviceaccount.com
      #
      # See docs/ci/GCP_WORKLOAD_IDENTITY_SETUP.md for detailed setup instructions
      - name: Authenticate to Google Cloud
        id: auth
        if: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER != '' && secrets.GCP_SERVICE_ACCOUNT != '' }}
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          token_format: 'access_token'
          # The auth action automatically sets GOOGLE_APPLICATION_CREDENTIALS
          # which Firebase Admin SDK will use via applicationDefault()
      
      - name: Notify if GCP auth is skipped
        if: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER == '' || secrets.GCP_SERVICE_ACCOUNT == '' }}
        run: |
          echo "⚠️  GCP authentication skipped - repository secrets not configured"
          echo "The workflow will continue without GCP credentials."
          echo "To enable GCP authentication, add these repository secrets:"
          echo "  - GCP_WORKLOAD_IDENTITY_PROVIDER"
          echo "  - GCP_SERVICE_ACCOUNT"
          echo ""
          echo "See docs/ci/GCP_WORKLOAD_IDENTITY_SETUP.md for setup instructions"
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npm run lint
      
      - name: Run tests
        run: npm test
        env:
          CI: true
      
      # Optional: Verify GCP authentication worked (only runs if auth succeeded)
      - name: Verify GCP authentication
        if: steps.auth.outcome == 'success'
        run: |
          echo "✅ Successfully authenticated to GCP using Workload Identity Federation"
          echo "GOOGLE_APPLICATION_CREDENTIALS is set to: $GOOGLE_APPLICATION_CREDENTIALS"
