name: CI with GCP OIDC Auth

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Required for OIDC authentication to GCP
permissions:
  contents: read
  id-token: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Display Node.js and npm versions
        run: |
          node --version
          npm --version

      - name: Debug: show GitHub repo/ref/event BEFORE auth
        run: |
          echo "GITHUB_REPOSITORY=${GITHUB_REPOSITORY}"
          echo "GITHUB_REF=${GITHUB_REF}"
          echo "GITHUB_EVENT_NAME=${GITHUB_EVENT_NAME}"
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            echo "On main: yes"
          else
            echo "On main: no"
          fi

      # Authenticate to Google Cloud using Workload Identity Federation (OIDC)
      # Only attempt authentication when the workflow is running on main.
      - name: Authenticate to Google Cloud
        id: auth
        if: ${{ startsWith(github.ref, 'refs/heads/main') }}
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          token_format: 'access_token'

      # Notify (always run) — script decides why auth was skipped by inspecting
      # both the branch and the secret values interpolated into the script.
      - name: Notify if GCP auth is skipped
        if: ${{ always() }}
        run: |
          PROVIDER='${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}'
          SA='${{ secrets.GCP_SERVICE_ACCOUNT }}'
          echo "GitHub ref: ${GITHUB_REF}"
          if [ "${GITHUB_REF}" != "refs/heads/main" ]; then
            echo "⚠️  GCP authentication skipped - workflow is not running on main"
            exit 0
          fi

          if [ -z "${PROVIDER}" ] || [ -z "${SA}" ]; then
            echo "⚠️  GCP authentication skipped - repository secrets not configured"
            echo "Missing values:"
            if [ -z "${PROVIDER}" ]; then
              echo "  - GCP_WORKLOAD_IDENTITY_PROVIDER (empty)"
            fi
            if [ -z "${SA}" ]; then
              echo "  - GCP_SERVICE_ACCOUNT (empty)"
            fi
            echo ""
            echo "To enable GCP authentication, add these repository secrets:"
            echo "  - GCP_WORKLOAD_IDENTITY_PROVIDER (value: projects/PROJECT_NUMBER/locations/global/workloadIdentityPools/POOL/providers/PROVIDER)"
            echo "  - GCP_SERVICE_ACCOUNT (value: service-account@PROJECT_ID.iam.gserviceaccount.com)"
            echo ""
            echo "See docs/ci/GCP_WORKLOAD_IDENTITY_SETUP.md for setup instructions"
          else
            echo "✅ Running on main and secrets present — Authenticate step will run (or ran)."
          fi

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run tests
        run: npm test
        env:
          CI: true

      # Optional: Verify GCP authentication worked (only runs if auth succeeded)
      - name: Verify GCP authentication
        if: steps.auth.outcome == 'success'
        run: |
          echo "✅ Successfully authenticated to GCP using Workload Identity Federation"
          if [ -n "${GOOGLE_APPLICATION_CREDENTIALS:-}" ]; then
            echo "GOOGLE_APPLICATION_CREDENTIALS is set to: ${GOOGLE_APPLICATION_CREDENTIALS}"
            ls -l "${GOOGLE_APPLICATION_CREDENTIALS}" || true
          else
            echo "GOOGLE_APPLICATION_CREDENTIALS is not set"
          fi
          gcloud auth list || true
